{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/OneVisions/src/contexts/CartContext.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\n\n// Define Product type inline if not available\nexport interface Product {\n  id: number;\n  name: string;\n  slug: string;\n  description: string;\n  price: number;\n  originalPrice?: number;\n  discount?: number;\n  features?: string[];\n  category?: string;\n  compatibility?: string[];\n  imageUrl: string[];\n}\n\ninterface CartItem {\n  product: Product;\n  quantity: number;\n}\n\ninterface CartContextType {\n  cart: CartItem[];\n  addToCart: (product: Product) => void;\n  removeFromCart: (productId: number) => void;\n  updateQuantity: (productId: number, quantity: number) => void;\n  clearCart: () => void;\n  getTotalPrice: () => number;\n}\n\nconst CartContext = createContext<CartContextType | null>(null);\n\ninterface CartProviderProps {\n  children: React.ReactNode;\n}\n\nexport const CartProvider: React.FC<CartProviderProps> = ({ children }) => {\n  const [cart, setCart] = useState<CartItem[]>([]);\n\n  useEffect(() => {\n    const savedCart = localStorage.getItem(\"cart\");\n    if (savedCart) {\n      try {\n        setCart(JSON.parse(savedCart));\n      } catch (error) {\n        console.error(\"Failed to parse cart from localStorage:\", error);\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n  }, [cart]);\n\n  const addToCart = (product: Product) => {\n    setCart(prevCart => {\n      const exists = prevCart.some(item => item.product.id === product.id);\n      if (exists) {\n        return prevCart;\n      }\n      return [...prevCart, { product, quantity: 1 }];\n    });\n  };\n\n  const removeFromCart = (productId: number) => {\n    setCart(prevCart => {\n      return prevCart.filter(item => item.product.id !== productId);\n    });\n  };\n\n  const updateQuantity = (productId: number, quantity: number) => {\n    setCart(prevCart =>\n      prevCart.map(item =>\n        item.product.id === productId ? { ...item, quantity } : item\n      )\n    );\n  };\n\n  const clearCart = () => setCart([]);\n\n  const getTotalPrice = () => {\n    return cart.reduce((total, item) => total + item.product.price * item.quantity, 0);\n  };\n\n  return (\n    <CartContext.Provider value={{ cart, addToCart, removeFromCart, updateQuantity, clearCart, getTotalPrice }}>\n      {children}\n    </CartContext.Provider>\n  );\n};\n\nexport function useCart() {\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error(\"useCart must be used within a CartProvider\");\n  }\n  return context;\n}\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAiCA,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAA0B;AAMnD,MAAM,eAA4C,CAAC,EAAE,QAAQ,EAAE;IACpE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAc,EAAE;IAE/C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,YAAY,aAAa,OAAO,CAAC;QACvC,IAAI,WAAW;YACb,IAAI;gBACF,QAAQ,KAAK,KAAK,CAAC;YACrB,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,2CAA2C;YAC3D;QACF;IACF,GAAG,EAAE;IAEL,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,aAAa,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC;IAC9C,GAAG;QAAC;KAAK;IAET,MAAM,YAAY,CAAC;QACjB,QAAQ,CAAA;YACN,MAAM,SAAS,SAAS,IAAI,CAAC,CAAA,OAAQ,KAAK,OAAO,CAAC,EAAE,KAAK,QAAQ,EAAE;YACnE,IAAI,QAAQ;gBACV,OAAO;YACT;YACA,OAAO;mBAAI;gBAAU;oBAAE;oBAAS,UAAU;gBAAE;aAAE;QAChD;IACF;IAEA,MAAM,iBAAiB,CAAC;QACtB,QAAQ,CAAA;YACN,OAAO,SAAS,MAAM,CAAC,CAAA,OAAQ,KAAK,OAAO,CAAC,EAAE,KAAK;QACrD;IACF;IAEA,MAAM,iBAAiB,CAAC,WAAmB;QACzC,QAAQ,CAAA,WACN,SAAS,GAAG,CAAC,CAAA,OACX,KAAK,OAAO,CAAC,EAAE,KAAK,YAAY;oBAAE,GAAG,IAAI;oBAAE;gBAAS,IAAI;IAG9D;IAEA,MAAM,YAAY,IAAM,QAAQ,EAAE;IAElC,MAAM,gBAAgB;QACpB,OAAO,KAAK,MAAM,CAAC,CAAC,OAAO,OAAS,QAAQ,KAAK,OAAO,CAAC,KAAK,GAAG,KAAK,QAAQ,EAAE;IAClF;IAEA,qBACE,8OAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAM;YAAW;YAAgB;YAAgB;YAAW;QAAc;kBACtG;;;;;;AAGP;AAEO,SAAS;IACd,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}}]
}